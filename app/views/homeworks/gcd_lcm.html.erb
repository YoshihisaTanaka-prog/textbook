<% 
  def gcd x,y
    if y == 0
      return x
    elsif x % y == 0
      if y < 0
        return -y
      else
        return y
      end
    else
      return gcd y, x % y
    end
  end

  def lcm x,y
    return x * y / gcd(x,y)
  end
%>
<p class="no-print"><%= link_to "トレーニングトップ", homeworks_path %>　<button onclick="window.print();">印刷</button></p>
<h1>方程式</h1>

<div class="no-print">
  解答付き<input type='range' id='status' value='<%= session["gcd_lcm"]["status"] if session[:gcd_lcm] %><%= 0 unless session[:gcd_lcm] %>' min='0' max='1' style='width:2em;' onchange='changeStatus()'>問題のみ<br>
</div>
以下の2つの数の最大公約数と最小公倍数を求めよ。
<table>
  <tr>
    <% @array.each_with_index do |unit, index| %>
      <td style="height: 22.5vw; width:24.5vw;" valign="top">
        (<%= unit[0]%>, <%= unit[1] %>)
        <div style="height: 10vw;"></div>
        <table>
            <tr><td rowspan=2>最大公約数</td><td>　　　　</td></tr>
            <tr><td style="border-bottom: 1px solid #000;"></td></tr>
            <tr><td rowspan=2>最小公倍数</td><td></td></tr>
            <tr><td style="border-bottom: 1px solid #000;"></td></tr>
        </table>
      </td>
      <% if index % 4 == 3 && index != 19 %>
        </tr><tr>
      <% end %>
    <% end %>
  </tr>
</table>
<div class="answer">
  <div style="break-after: page;"></div>
  <table class="answer">
    <tr>
      <% @array.each_with_index do |unit, index| %>
        <td style="height: 22.5vw; width:24.5vw;" valign="top">
          (<%= unit[0]%>, <%= unit[1] %>)
          <table>
            <tr><td >最大公約数</td><td style="border-bottom: 1px solid #000;"><%= gcd(unit[0], unit[1]) %></td></tr>
            <tr><td >最小公倍数</td><td style="border-bottom: 1px solid #000;"><%= lcm(unit[0], unit[1]) %></td></tr>
          </table>
        </td>
        <% if index % 4 == 3 && index != 19 %>
          </tr><tr>
        <% end %>
      <% end %>
    </tr>
  </table>
</div>

<script type="text/javascript">

  function changeStatus(){
    if ( $("#status").val() == "0" ) {
      $("#answer").attr("style", "");
    } else{
      $("#answer").attr("style", "display: none;");
    }
    sendSelections()
  }

  
  function getSelections(){
    return {pageName: "gcd_lcm", status: $("#status").val()};
  }

  function setSelections(){
    changeStatus();
  }

  setSelections()

  function sendSelections(){
    setCSRFtoken();
    $.ajax({
      type: "POST",
      url: "/set-training-session",
      data: getSelections()
    })
    .done(function(data){
      console.log(data);
    })
    .fail(function(){
      alert("Failed to send settng to server!");
    })
  }

  function setCSRFtoken() {
    $.ajaxPrefilter(function (options, originalOptions, jqXHR) {
      if (!options.crossDomain) {
        const token = $('meta[name="csrf-token"]').attr('content');
        if (token) {
          return jqXHR.setRequestHeader('X-CSRF-Token', token);
        }
      }
    });
  }
</script>
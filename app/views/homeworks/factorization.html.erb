<% 
  def gcd x,y
    if y == 0
      return x
    elsif x % y == 0
      if y < 0
        return -y
      else
        return y
      end
    else
      return gcd y, x % y
    end
  end
%>

<p class="no-print"><%= link_to "トレーニングトップ", homeworks_path %>　<button onclick="window.print();">印刷</button></p>
<div style="display: flex;">
  <h1>展開・因数分解</h1>
  <%= image_tag "training-qr.jpg", style: "width: 4rem; height: 4rem; margin: auto;" %>
</div>
<div class="no-print">
  展開<input type='range' id='mode' value='<%= session["factorization"]["mode"] if session[:factorization] %><%= 0 unless session[:factorization] %>' min='0' max='1' style='width:2em;' onchange='changeMode()'>因数分解<br>
  中学生用<input type='range' id='grade' value='<%= session["factorization"]["grade"] if session[:factorization] %><%= 0 unless session[:factorization] %>' min='0' max='1' style='width:2em;' onchange='changeGrade()'>高校生用<br>
  解答付き<input type='range' id='status' value='<%= session["factorization"]["status"] if session[:factorization] %><%= 0 unless session[:factorization] %>' min='0' max='1' style='width:2em;' onchange='changeStatus()'>問題のみ<br>
</div>
以下の二次式を<span class="expansion">展開</span><span class="factorization" style="display: none">因数分解</span>してね。　　名前　　　　　　　　　　　　　　分　　秒
<div id="junior">

  <div class="expansion">
    <table class='homework'>
      <tr>
        <% @junior_array.each_with_index do |unit, index| %>
          <td style="height: 22vw; width: 49vw;" valign="top">
          <% if unit[0] == unit[1] %>
            <% if unit[0] < 0 %>
              (x<%= unit[0] %>)^2
            <% else %>
              (x+<%= unit[0] %>)^2
            <% end %>
            
          <% else %>
            <% if unit[0] == 0%>
              x
            <% elsif unit[0] < 0 %>
              (x<%= unit[0] %>)
            <% else %>
              (x+<%= unit[0] %>)
            <% end %>
            <% if unit[1] == 0%>
              x
            <% elsif unit[1] < 0 %>
              (x<%= unit[1] %>)
            <% else %>
              (x+<%= unit[1] %>)
            <% end %>
          <% end %>
          </td>
          <% if index % 2 == 1 && index != 9 %>
            </tr><tr>
          <% end %>
        <% end %>
      </tr>
    </table>

    <div class="answer">
      <div style="break-after: page;"></div>
      以下の二次式を展開してね。　　名前　　　　　　　　　　　　
      <% @junior_array.each do |unit| %>
      <div style="margin-top: 1em;">
          <% if unit[0] == unit[1] %>
            (x
            <% if unit[0] < 0 %>
            <%= unit[0] %>
            <% elsif unit[0] > 0%>
            +<%= unit[0] %>
            <% end %>
            )^2
          <% else %>
            (x
            <% if unit[0] < 0 %>
            <%= unit[0] %>
            <% elsif unit[0] > 0%>
            +<%= unit[0] %>
            <% end %>
            )(x
            <% if unit[1] < 0 %>
            <%= unit[1] %>
            <% elsif unit[1] > 0%>
            +<%= unit[1] %>
            <% end %>
            )
          <% end %><br>
          =x^2
          <% if unit[0] + unit[1] < 0 %>
            <%= unit[0] + unit[1] %>x
          <% elsif unit[0] + unit[1] > 0 %>
            +<%= unit[0] + unit[1] %>x
          <% end %>
          <% if unit[0] * unit[1] < 0 %>
            <%= unit[0] * unit[1] %>
          <% elsif unit[0] * unit[1] > 0 %>
            +<%= unit[0] * unit[1] %>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>

  <div class="factorization" style="display: none">
    <table class='homework'>
      <tr>
        <% @junior_array.each_with_index do |unit, index| %>
          <td style="height: 22vw; width: 49vw;" valign="top">
          x^2
          <% if unit[0] + unit[1] < 0 %>
              <% if unit[0] + unit[1] == -1 %>
                  -x
              <% else %>
                  <%= unit[0] + unit[1] %>x
              <% end %>
          <% elsif unit[0] + unit[1] > 0 %>
              <% if unit[0] + unit[1] == 1 %>
                  +x
              <% else %>
                  +<%= unit[0] + unit[1] %>x
              <% end %>
          <% end %>
          <% if unit[0] * unit[1] < 0 %>
              <%= unit[0] * unit[1] %>
          <% elsif unit[0] * unit[1] > 0 %>
              +<%= unit[0] * unit[1] %>
          <% end %>
          </td>
          <% if index % 2 == 1 && index != 9 %>
            </tr><tr>
          <% end %>
        <% end %>
      </tr>
    </table>

    <div class="answer">
      <div style="break-after: page;"></div>
      以下の二次式を因数分解してね。　　名前　　　　　　　　　　　　
      <% @junior_array.each do |unit| %>
      <div style="margin-top: 1em;">
          　
          x^2
          <% if unit[0] + unit[1] < 0 %>
            <%= unit[0] + unit[1] %>x
          <% elsif unit[0] + unit[1] > 0 %>
            +<%= unit[0] + unit[1] %>x
          <% end %>
          <% if unit[0] * unit[1] < 0 %>
            <%= unit[0] * unit[1] %>
          <% elsif unit[0] * unit[1] > 0 %>
            +<%= unit[0] * unit[1] %>
          <% end %><br>
          
          <% if unit[0] == unit[1] %>
            =(x
            <% if unit[0] < 0 %>
            <%= unit[0] %>
            <% elsif unit[0] > 0%>
            +<%= unit[0] %>
            <% end %>
            )^2
          <% else %>
            =(x
            <% if unit[0] < 0 %>
            <%= unit[0] %>
            <% elsif unit[0] > 0%>
            +<%= unit[0] %>
            <% end %>
            )(x
            <% if unit[1] < 0 %>
            <%= unit[1] %>
            <% elsif unit[1] > 0%>
            +<%= unit[1] %>
            <% end %>
            )
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<div id="high" style="display: none;">
  <div class="expansion">
    <table class='homework'>
      <tr>
        <% @array.each_with_index do |single, index| %>
          <td valign="top" style="height: 22vw; width: 49vw">

          <%
            gcd_1 = gcd single[0], single[1]
            gcd_2 = gcd single[2], single[3]
            single_gcd = gcd_1 * gcd_2
            single_2 = []
            single_2.push(single[0] / gcd_1)
            single_2.push(single[1] / gcd_1)
            single_2.push(single[2] / gcd_2)
            single_2.push(single[3] / gcd_2)
          %>

          <% unless single_gcd == 1 %>
            <%= single_gcd %>
          <% end%>
          
          <% if single_2[0] == single_2[2] && single_2[1] == single_2[3] %>
            (
            <% if single_2[0] == 1 %>
              x
            <% else %>
              <%= single_2[0] %>x
            <% end %>
            <% if single_2[1] < 0 %>
              <%= single_2[1] %>
            <% elsif single_2[1] > 0 %>
              +<%= single_2[1] %>
            <% end %>
            )^2
          <% else %>
            (
            <% if single_2[0] == 1 %>
              x
            <% else %>
              <%= single_2[0] %>x
            <% end %>
            <% if single_2[1] < 0 %>
              <%= single_2[1] %>
            <% elsif single_2[1] > 0 %>
              +<%= single_2[1] %>
            <% end %>
            )(
            <% if single_2[2] == 1 %>
              x
            <% else %>
              <%= single_2[2] %>x
            <% end %>
            <% if single_2[3] < 0 %>
              <%= single_2[3] %>
            <% elsif single_2[3] > 0 %>
              +<%= single_2[3] %>
            <% end %>
            )
          <% end %>
          </td>
          <% if index % 2 == 1 && index != 9%>
            </tr><tr>
          <% end %>
        <% end %>
      </tr>
    </table>


    <div class="answer">
      <div style="break-after: page;"></div>
      以下の二次式を因数分解してね。　　名前　　　　　　　　　　　　
      <% @array.each do |single| %>
        <div style="margin-top: 1em;">
          

          <%
            gcd_1 = gcd single[0], single[1]
            gcd_2 = gcd single[2], single[3]
            single_gcd = gcd_1 * gcd_2
            single_2 = []
            single_2.push(single[0] / gcd_1)
            single_2.push(single[1] / gcd_1)
            single_2.push(single[2] / gcd_2)
            single_2.push(single[3] / gcd_2)
          %>

          <% unless single_gcd == 1 %>
            <%= single_gcd %>
          <% end%>
          
          <% if single_2[0] == single_2[2] && single_2[1] == single_2[3] %>
            (
            <% if single_2[0] == 1 %>
              x
            <% else %>
              <%= single_2[0] %>x
            <% end %>
            <% if single_2[1] < 0 %>
              <%= single_2[1] %>
            <% elsif single_2[1] > 0 %>
              +<%= single_2[1] %>
            <% end %>
            )^2
          <% else %>
            (
            <% if single_2[0] == 1 %>
              x
            <% else %>
              <%= single_2[0] %>x
            <% end %>
            <% if single_2[1] < 0 %>
              <%= single_2[1] %>
            <% elsif single_2[1] > 0 %>
              +<%= single_2[1] %>
            <% end %>
            )(
            <% if single_2[2] == 1 %>
              x
            <% else %>
              <%= single_2[2] %>x
            <% end %>
            <% if single_2[3] < 0 %>
              <%= single_2[3] %>
            <% elsif single_2[3] > 0 %>
              +<%= single_2[3] %>
            <% end %>
            )
          <% end %><br>
          
          =
          
          <% if single[0] * single[2] == 1%>
            x^2
          <% else %>
            <%= single[0] * single[2] %> x^2
          <% end %>

          <% if single[0] * single[3] + single[1] * single[2] == 0 %>
          <% elsif single[0] * single[3] + single[1] * single[2] == 1 %>
            +x
          <% elsif single[0] * single[3] + single[1] * single[2] == -1 %>
            -x
          <% elsif single[0] * single[3] + single[1] * single[2] < 0 %>
            <%= single[0] * single[3] + single[1] * single[2] %>x
          <% else %>
            +<%= single[0] * single[3] + single[1] * single[2] %>x
          <% end %>

          <% if single[1] * single[3] == 0 %>
          <% elsif single[1] * single[3] < 0 %>
            <%= single[1] * single[3] %>
          <% else %>
            +<%= single[1] * single[3] %>
          <% end %>
            

        </div>
      <% end %>
    </div>
  </div>

  <div class="factorization" style="display: none">
    <table class='homework'>
      <tr>
        <% @array.each_with_index do |single, index| %>
          <td valign="top" style="height: 22vw; width: 49vw">
            <% if single[0] * single[2] == 1%>
              x^2
            <% else %>
              <%= single[0] * single[2] %> x^2
            <% end %>

            <% if single[0] * single[3] + single[1] * single[2] == 0 %>
            <% elsif single[0] * single[3] + single[1] * single[2] == 1 %>
              +x
            <% elsif single[0] * single[3] + single[1] * single[2] == -1 %>
              -x
            <% elsif single[0] * single[3] + single[1] * single[2] < 0 %>
              <%= single[0] * single[3] + single[1] * single[2] %>x
            <% else %>
              +<%= single[0] * single[3] + single[1] * single[2] %>x
            <% end %>

            <% if single[1] * single[3] == 0 %>
            <% elsif single[1] * single[3] < 0 %>
              <%= single[1] * single[3] %>
            <% else %>
              +<%= single[1] * single[3] %>
            <% end %>
          </td>
          <% if index % 2 == 1 && index != 9%>
            </tr><tr>
          <% end %>
        <% end %>
      </tr>
    </table>


    <div class="answer">
      <div style="break-after: page;"></div>
      以下の二次式を因数分解してね。　　名前　　　　　　　　　　　　
      <% @array.each do |single| %>
        <div style="margin-top: 1em;">
          　
          <% if single[0] * single[2] == 1%>
            x^2
          <% else %>
            <%= single[0] * single[2] %> x^2
          <% end %>

          <% if single[0] * single[3] + single[1] * single[2] == 0 %>
          <% elsif single[0] * single[3] + single[1] * single[2] == 1 %>
            +x
          <% elsif single[0] * single[3] + single[1] * single[2] == -1 %>
            -x
          <% elsif single[0] * single[3] + single[1] * single[2] < 0 %>
            <%= single[0] * single[3] + single[1] * single[2] %>x
          <% else %>
            +<%= single[0] * single[3] + single[1] * single[2] %>x
          <% end %>

          <% if single[1] * single[3] == 0 %>
          <% elsif single[1] * single[3] < 0 %>
            <%= single[1] * single[3] %>
          <% else %>
            +<%= single[1] * single[3] %>
          <% end %><br>
          
          =

          <%
            gcd_1 = gcd single[0], single[1]
            gcd_2 = gcd single[2], single[3]
            single_gcd = gcd_1 * gcd_2
            single_2 = []
            single_2.push(single[0] / gcd_1)
            single_2.push(single[1] / gcd_1)
            single_2.push(single[2] / gcd_2)
            single_2.push(single[3] / gcd_2)
          %>

          <% unless single_gcd == 1 %>
            <%= single_gcd %>
          <% end%>
          
          <% if single_2[0] == single_2[2] && single_2[1] == single_2[3] %>
            (
            <% if single_2[0] == 1 %>
              x
            <% else %>
              <%= single_2[0] %>x
            <% end %>
            <% if single_2[1] < 0 %>
              <%= single_2[1] %>
            <% elsif single_2[1] > 0 %>
              +<%= single_2[1] %>
            <% end %>
            )^2
          <% else %>
            (
            <% if single_2[0] == 1 %>
              x
            <% else %>
              <%= single_2[0] %>x
            <% end %>
            <% if single_2[1] < 0 %>
              <%= single_2[1] %>
            <% elsif single_2[1] > 0 %>
              +<%= single_2[1] %>
            <% end %>
            )(
            <% if single_2[2] == 1 %>
              x
            <% else %>
              <%= single_2[2] %>x
            <% end %>
            <% if single_2[3] < 0 %>
              <%= single_2[3] %>
            <% elsif single_2[3] > 0 %>
              +<%= single_2[3] %>
            <% end %>
            )
          <% end %>
            
            

        </div>
      <% end %>
    </div>
  </div>
</div>

<script type="text/javascript">
  function changeStatus(){
    if ( $("#status").val() == "0" ) {
      $(".answer").attr("style", "");
    } else{
      $(".answer").attr("style", "display: none;");
    }
    sendSelections();
  }

  function changeGrade(){
    if ( $("#grade").val() == "0" ) {
      $("#junior").attr("style", "");
      $("#high").attr("style", "display: none;");
    } else{
      $("#junior").attr("style", "display: none;");
      $("#high").attr("style", "");
    }
    sendSelections();
  }

  function changeMode(){
    if ( $("#mode").val() == "0" ) {
      $(".expansion").attr("style", "");
      $(".factorization").attr("style", "display: none;");
    } else{
      $(".expansion").attr("style", "display: none;");
      $(".factorization").attr("style", "");
    }
    sendSelections();
  }

  function getSelections(){
    return {pageName: "factorization", status: $("#status").val(), grade: $("#grade").val(), mode: $("#mode").val()};
  }

  function setSelections(){
    changeStatus();
    changeGrade();
    changeMode();
  }

  setSelections()

  function sendSelections(){
    setCSRFtoken();
    $.ajax({
      type: "POST",
      url: "/set-training-session",
      data: getSelections()
    })
    .done(function(data){
      console.log(data);
    })
    .fail(function(){
      alert("Failed to send settng to server!");
    })
  }

  function setCSRFtoken() {
    $.ajaxPrefilter(function (options, originalOptions, jqXHR) {
      if (!options.crossDomain) {
        const token = $('meta[name="csrf-token"]').attr('content');
        if (token) {
          return jqXHR.setRequestHeader('X-CSRF-Token', token);
        }
      }
    });
  }
</script>